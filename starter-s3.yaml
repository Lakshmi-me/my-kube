---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prow
  name: plugins
data:
  plugins.yaml: |
    plugins:
      n-mam/my-kube:
      - approve
      - assign
      - blunderbuss
      - cat
      - dog
      - help
      - heart
      - hold
      - label
      - lgtm
      - trigger
      - verify-owners
      - wip
      - yuks

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prow
  name: config
data:
  config.yaml: |
    prowjob_namespace: prow
    pod_namespace: test-pods

    in_repo_config:
      enabled:
        "*": true

    deck:
     spyglass:
       lenses:
       - lens:
           name: metadata
         required_files:
         - started.json|finished.json
       - lens:
           config:
           name: buildlog
         required_files:
         - build-log.txt
       - lens:
           name: junit
         required_files:
         - .*/junit.*\.xml
       - lens:
           name: podinfo
         required_files:
         - podinfo.json

    plank:
      job_url_prefix_config:
        "*": https://prow.localhost/view/
      report_templates:
        '*': >-
            [Full PR test history](https://prow.localhost/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}).
            [Your PR dashboard](https://prow.localhost/pr?query=is:pr+state:open+author:{{with
            index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).
      default_decoration_configs:
        "*":
          gcs_configuration:
            bucket: s3://nmam-bucket
            path_strategy: explicit
          s3_credentials_secret: s3-credentials
          utility_images:
            clonerefs: gcr.io/k8s-prow/clonerefs:v20210224-8a51e1a927
            entrypoint: gcr.io/k8s-prow/entrypoint:v20210224-8a51e1a927
            initupload: gcr.io/k8s-prow/initupload:v20210224-8a51e1a927
            sidecar: gcr.io/k8s-prow/sidecar:v20210224-8a51e1a927

    tide:
      queries:
      - labels:
        - lgtm
        - approved
        missingLabels:
        - needs-rebase
        - do-not-merge/hold
        - do-not-merge/work-in-progress
        - do-not-merge/invalid-owners-file
        orgs:
        - n-mam

    decorate_all_jobs: true
    periodics:
    - interval: 1m
      agent: kubernetes
      name: echo-test
      spec:
        containers:
        - image: alpine
          command: ["/bin/date"]

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: prowjobs.prow.k8s.io
spec:
  group: prow.k8s.io
  version: v1
  names:
    kind: ProwJob
    singular: prowjob
    plural: prowjobs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            max_concurrency:
              type: integer
              minimum: 0
            type:
              type: string
              enum:
              - "presubmit"
              - "postsubmit"
              - "periodic"
              - "batch"
        status:
          properties:
            state:
              type: string
              enum:
              - "triggered"
              - "pending"
              - "success"
              - "failure"
              - "aborted"
              - "error"
          anyOf:
          - not:
              properties:
                state:
                  type: string
                  enum:
                  - "success"
                  - "failure"
                  - "error"
                  - "aborted"
          - required:
            - completionTime

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hook
  namespace: prow
  labels:
    app: hook
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: hook
    spec:
      serviceAccountName: "hook"
      terminationGracePeriodSeconds: 180
      containers:
      - name: hook
        image: gcr.io/k8s-prow/hook:v20180529-e9431eaa3
        imagePullPolicy: Always
        args:
        - --dry-run=false
        - --config-path=/etc/config/config.yaml
        - --github-token-path=/etc/github/token
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        ports:
          - name: http
            containerPort: 8888
        volumeMounts:
        - name: hmac
          mountPath: /etc/webhook
          readOnly: true
        - name: github
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
      volumes:
      - name: hmac
        secret:
          secretName: hmac-token
      - name: github
        secret:
          secretName: github-token
      - name: config
        configMap:
          name: config
      - name: plugins
        configMap:
          name: plugins

---
apiVersion: v1
kind: Service
metadata:
  name: hook
  namespace: prow
spec:
  selector:
    app: hook
  ports:
  - port: 8888

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plank
  namespace: prow
  labels:
    app: plank
spec:
  replicas: 1 # Do not scale up.
  template:
    metadata:
      labels:
        app: plank
    spec:
      containers:
      - name: plank
        image: gcr.io/k8s-prow/plank:v20180529-e9431eaa3
        args:
        - --dry-run=false
        volumeMounts:
        - name: github
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: github
        secret:
          secretName: github-token
      - name: config
        configMap:
          name: config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sinker
  namespace: prow
  labels:
    app: sinker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sinker
    spec:
      serviceAccountName: "sinker"
      containers:
      - name: sinker
        image: gcr.io/k8s-prow/sinker:v20180529-e9431eaa3
        args:
        - --config-path=/etc/config/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deck
  namespace: prow
  labels:
    app: deck
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: deck
    spec:
      serviceAccountName: "deck"
      terminationGracePeriodSeconds: 30
      containers:
      - name: deck
        image: gcr.io/k8s-prow/deck:v20180529-e9431eaa3
        args:
        - --config-path=/etc/config/config.yaml
        - --plugin-config=/etc/plugins/plugins.yaml
        - --tide-url=http://tide/
        - --hook-url=http://hook:8888/plugin-help
        - --github-token-path=/etc/github/token
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --github-graphql-endpoint=http://ghproxy/graphql
        - --plugin-config=/etc/plugins/plugins.yaml
        - --s3-credentials-file=/etc/s3-credentials/service-account.json
        - --spyglass=true
        ports:
          - name: http
            containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: github
          mountPath: /etc/github
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
        - name: s3-credentials
          mountPath: /etc/s3-credentials
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
      - name: github
        secret:
          secretName: github-token
      - name: plugins
        configMap:
          name: plugins
      - name: s3-credentials
        secret:
          secretName: s3-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: deck
  namespace: prow
spec:
  selector:
    app: deck
  ports:
  - port: 80
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: horologium
  namespace: prow
  labels:
    app: horologium
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: horologium
  template:
    metadata:
      labels:
        app: horologium
    spec:
      serviceAccountName: "horologium"
      terminationGracePeriodSeconds: 30
      containers:
      - name: horologium
        image: gcr.io/k8s-prow/horologium:v20180529-e9431eaa3
        args:
        - --dry-run=false
        - --config-path=/etc/config/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statusreconciler
  namespace: prow
  labels:
    app: statusreconciler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: statusreconciler
  template:
    metadata:
      labels:
        app: statusreconciler
    spec:
      serviceAccountName: statusreconciler
      terminationGracePeriodSeconds: 180
      containers:
      - name: statusreconciler
        image: gcr.io/k8s-prow/status-reconciler:v20210224-8a51e1a927
        args:
        - --dry-run=false
        - --continue-on-error=true
        - --plugin-config=/etc/plugins/plugins.yaml
        - --config-path=/etc/config/config.yaml
        - --github-token-path=/etc/github/token
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --s3-credentials-file=/etc/s3-credentials/service-account.json
        - --status-path=s3://nmam-bucket/status-reconciler/status-reconciler-status

        volumeMounts:
        - name: github-token
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
        - name: s3-credentials
          mountPath: /etc/s3-credentials
          readOnly: true
      volumes:
      - name: github-token
        secret:
          secretName: github-token
      - name: config
        configMap:
          name: config
      - name: plugins
        configMap:
          name: plugins
      - name: s3-credentials
        secret:
          secretName: s3-credentials

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crier
  namespace: prow
  labels:
    app: crier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crier
  template:
    metadata:
      labels:
        app: crier
    spec:
      serviceAccountName: crier
      terminationGracePeriodSeconds: 30
      containers:
      - name: crier
        image: gcr.io/k8s-prow/crier:v20210224-8a51e1a927
        args:
        - --blob-storage-workers=10
        - --config-path=/etc/config/config.yaml
        - --s3-credentials-file=/etc/s3-credentials/service-account.json
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --github-token-path=/etc/github/token
        - --github-workers=10
        - --kubernetes-blob-storage-workers=10
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: github-token
          mountPath: /etc/github
          readOnly: true
        - name: s3-credentials
          mountPath: /etc/s3-credentials
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
      - name: github-token
        secret:
          secretName: github-token
      - name: s3-credentials
        secret:
          secretName: s3-credentials

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ing
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: deck
          servicePort: 80
      - path: /hook
        backend:
          serviceName: hook
          servicePort: 8888
